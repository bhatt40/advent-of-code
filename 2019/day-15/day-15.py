from intcode_computer import IntcodeComputer
import matplotlib.pyplot as plt
from random import randint
from queue import PriorityQueue


class Path:
    location = None
    distance = None

    def __init__(self, location, distance):
        self.location = location
        self.distance = distance

    def __lt__(self, other):
        return self.distance < other.distance

    def __le__(self, other):
        return self.distance <= other.distance


def get_next_input(map, loc):
    # 0 = Up, 1 = Down, 2 = Left, 3 = Right
    return randint(0, 3)


def draw_map(map, droid_location):
    MARKER_MAPPING = {
        0: 's',  # Wall
        1: '.',  # Empty
        2: '*',  # Oxygen
    }

    for coord, val in map.items():
        plt.scatter(coord.real, coord.imag, marker=MARKER_MAPPING[val])

    plt.scatter(droid_location.real, droid_location.imag, marker='P')
    plt.show()


def find_oxygen_system(ic, map, droid_location):
    last_status = None
    ic.run()
    while last_status != 2:
        command = get_next_input(map, location)
        intcode_computer.append_new_input(command + 1)
        intcode_computer.run()
        last_status = intcode_computer.pop_last_output()

        new_location = droid_location + DIRECTION_MAPPING[command]

        map.update({
            new_location: last_status
        })

        if last_status == 1:
            droid_location += DIRECTION_MAPPING[command]

    return droid_location


def calculate_manhattan_distance(a, b):
    return int(abs(b.real - a.real) + abs(b.imag - a.imag))


def get_neighboring_paths(map, location):
    return list(filter(lambda x: map.get(x, 0) in [1, 2], [
        location + direction
        for direction in DIRECTION_MAPPING
    ]))


DIRECTION_MAPPING = [0+1j, 0-1j, -1, 1]

with open('input.txt', 'r') as f:
    origin_memory = [
        int(x) for x in f.readline().split(',')
    ]

# Map(0 = wall, 1 = empty, 2 = oxygen)
map = {
    0+0j: 1
}
start_location = 0+0j
intcode_computer = IntcodeComputer(origin_memory, [])

final_location = find_oxygen_system(intcode_computer, map, start_location)
draw_map(map, final_location)

# final_location = 15+12j
# map = {0j: 1, -1j: 0, (-1+0j): 0, 1j: 1, (1+0j): 0, 2j: 1, (-1+2j): 0, 3j: 0, (-1+1j): 0, (1+1j): 0, (1+2j): 1, (1+3j): 0, (2+2j): 1, (2+1j): 1, (3+1j): 0, (2+0j): 1, (3+0j): 0, (2+3j): 0, (2-1j): 1, (1-1j): 0, (2-2j): 1, (1-2j): 0, (2-3j): 0, (3-2j): 1, (4-2j): 1, (4-3j): 0, (4-1j): 0, (5-2j): 1, (6-2j): 1, (5-1j): 0, (5-3j): 0, (7-2j): 0, (6-1j): 1, (7-1j): 0, (3-1j): 0, (3-3j): 0, (6-3j): 0, (6+0j): 1, (7+0j): 1, (5+0j): 0, (6+1j): 0, (7+1j): 0, (8+0j): 1, (3+2j): 0, (8-1j): 1, (9-1j): 0, (8-2j): 1, (8-3j): 1, (8-4j): 1, (7-4j): 0, (8+1j): 0, (9+0j): 0, (9-4j): 1, (9-3j): 0, (8-5j): 0, (10-4j): 1, (11-4j): 0, (10-5j): 1, (10-6j): 1, (9-6j): 0, (10-7j): 1, (11-6j): 0, (11-5j): 0, (9-5j): 0, (11-7j): 0, (10-8j): 1, (11-8j): 1, (11-9j): 0, (12-8j): 1, (13-8j): 1, (13-9j): 0, (12-7j): 0, (14-8j): 1, (12-9j): 0, (9-8j): 0, (10-9j): 0, (9-7j): 0, (13-7j): 0, (10-3j): 0, (9-2j): 0, (7-3j): 0, (15-8j): 1, (16-8j): 1, (16-7j): 1, (16-6j): 1, (15-6j): 0, (17-6j): 1, (17-7j): 0, (18-6j): 1, (18-5j): 0, (17-5j): 0, (19-6j): 0, (18-7j): 1, (16-9j): 0, (17-8j): 0, (15-9j): 0, (15-7j): 0, (14-7j): 0, (14-9j): 0, (16-5j): 0, (19-7j): 0, (18-8j): 1, (19-8j): 0, (18-9j): 1, (18-10j): 1, (18-11j): 0, (19-10j): 0, (17-9j): 0, (17-10j): 1, (16-10j): 1, (17-11j): 0, (16-11j): 0, (19-9j): 0, (15-10j): 1, (15-11j): 0, (14-10j): 1, (13-10j): 1, (14-11j): 0, (12-10j): 1, (13-11j): 0, (11-10j): 1, (12-11j): 0, (11-11j): 0, (10-10j): 1, (10-11j): 1, (10-12j): 1, (10-13j): 0, (9-11j): 0, (9-10j): 0, (9-12j): 1, (8-12j): 1, (11-12j): 0, (8-11j): 1, (7-11j): 0, (8-10j): 1, (7-12j): 0, (8-13j): 0, (9-13j): 0, (7-10j): 1, (6-10j): 1, (6-11j): 0, (6-9j): 1, (5-10j): 0, (7-9j): 0, (8-9j): 0, (6-8j): 1, (6-7j): 0, (5-9j): 0, (5-8j): 1, (7-8j): 0, (5-7j): 0, (4-8j): 1, (4-9j): 0, (3-8j): 0, (4-7j): 1, (4-6j): 1, (4-5j): 0, (3-7j): 0, (3-6j): 0, (5-6j): 1, (5-5j): 0, (6-6j): 1, (7-6j): 1, (8-6j): 1, (8-7j): 1, (8-8j): 1, (7-7j): 0, (7-5j): 0, (6-5j): 1, (6-4j): 1, (5-4j): 1, (4-4j): 1, (3-4j): 1, (2-4j): 1, (1-4j): 0, (2-5j): 1, (1-5j): 0, (3-5j): 0, (2-6j): 1, (2-7j): 1, (1-6j): 0, (2-8j): 1, (1-7j): 0, (1-8j): 1, -8j: 1, (-1-8j): 0, (1-9j): 0, -7j: 1, (-1-7j): 0, -6j: 1, -5j: 0, (-1-6j): 1, (-2-6j): 1, (-3-6j): 1, (-4-6j): 1, (-5-6j): 0, (-3-7j): 0, (-2-5j): 0, -9j: 0, (2-9j): 0, (-1-5j): 0, (-2-7j): 0, (-4-7j): 0, (-3-5j): 0, (-4-5j): 1, (-4-4j): 1, (-5-4j): 0, (-4-3j): 0, (-3-4j): 1, (-5-5j): 0, (-3-3j): 0, (-2-4j): 1, (-2-3j): 1, (-2-2j): 1, (-3-2j): 0, (-1-3j): 0, (-2-1j): 1, (-3-1j): 0, (-1-1j): 0, (-2+0j): 1, (-3+0j): 0, (-2+1j): 1, (-3+1j): 0, (-2+2j): 1, (-2+3j): 0, (-1-2j): 1, (-3+2j): 1, (-4+2j): 1, (-4+3j): 1, (-5+3j): 0, (-3+3j): 0, (-4+4j): 1, (-4+5j): 0, (-5+4j): 1, (-6+4j): 1, (-6+3j): 0, (-6+5j): 0, (-7+4j): 1, (-7+5j): 0, (-8+4j): 1, (-8+3j): 0, (-9+4j): 0, (-8+5j): 1, (-9+5j): 0, (-8+6j): 1, (-9+6j): 0, (-8+7j): 0, (-7+6j): 1, (-7+7j): 0, (-6+6j): 1, (-6+7j): 0, (-5+6j): 1, (-5+5j): 0, (-4+6j): 1, (-4+7j): 1, (-3+7j): 0, (-4+8j): 1, (-3+8j): 0, (-5+8j): 0, (-4+9j): 1, (-4+10j): 1, (-4+11j): 0, (-5+10j): 0, (-5+7j): 0, (-3+6j): 0, (-5+9j): 0, (-3+9j): 0, (-3+10j): 1, (-3+11j): 0, (-2+10j): 1, (-2+9j): 0, (-1+10j): 1, 10j: 1, 11j: 1, (-1+11j): 0, 12j: 1, (-1+12j): 0, 13j: 1, (-1+13j): 0, (1+13j): 0, (1+11j): 0, 9j: 0, (1+12j): 0, 14j: 1, (1+14j): 0, 15j: 1, (-2+11j): 0, (1+10j): 0, (-1+9j): 0, (-1+14j): 0, (-1+15j): 0, (1+15j): 0, 16j: 1, (-1+16j): 1, (-2+16j): 1, (-2+15j): 1, (-2+14j): 1, (-3+15j): 0, 17j: 0, (1+16j): 0, (-2+17j): 0, (-3+16j): 0, (-3+14j): 1, (-3+13j): 0, (-4+14j): 1, (-4+15j): 0, (-4+13j): 1, (-5+13j): 0, (-5+14j): 0, (-4+12j): 1, (-5+12j): 1, (-2+13j): 0, (-3+12j): 1, (-2+12j): 1, (-5+11j): 0, (-6+12j): 1, (-7+12j): 1, (-8+12j): 1, (-6+13j): 0, (-8+13j): 1, (-7+13j): 0, (-7+11j): 0, (-8+11j): 0, (-9+12j): 0, (-8+14j): 1, (-7+14j): 0, (-8+15j): 0, (-9+13j): 0, (-9+14j): 1, (-9+15j): 0, (-10+14j): 1, (-10+15j): 1, (-10+16j): 1, (-9+16j): 0, (-11+15j): 0, (-10+17j): 0, (-11+16j): 1, (-12+16j): 1, (-13+16j): 1, (-14+16j): 1, (-15+16j): 1, (-15+15j): 0, (-14+15j): 0, (-16+16j): 1, (-16+15j): 0, (-14+17j): 0, (-15+17j): 0, (-17+16j): 1, (-17+17j): 0, (-18+16j): 1, (-18+15j): 0, (-18+17j): 0, (-19+16j): 1, (-19+17j): 0, (-12+15j): 0, (-12+17j): 0, (-13+15j): 0, (-11+17j): 0, (-11+14j): 0, (-13+17j): 0, (-16+17j): 0, (-10+13j): 0, (-6+11j): 0, (-1+17j): 0, (-17+15j): 0, (-20+16j): 1, (-20+15j): 1, (-21+16j): 0, (-19+15j): 0, (-20+14j): 1, (-21+14j): 0, (-19+14j): 0, (-20+17j): 1, (-20+18j): 1, (-21+18j): 0, (-19+18j): 0, (-21+17j): 0, (-20+19j): 1, (-19+19j): 0, (-21+15j): 0, (-20+13j): 1, (-21+13j): 0, (-20+12j): 1, (-20+11j): 0, (-21+12j): 0, (-19+12j): 1, (-19+13j): 0, (-18+12j): 1, (-18+11j): 0, (-18+13j): 1, (-17+13j): 0, (-17+12j): 0, (-18+14j): 1, (-19+11j): 0, (-17+14j): 1, (-16+14j): 1, (-15+14j): 1, (-15+13j): 0, (-14+14j): 1, (-14+13j): 0, (-13+14j): 1, (-12+14j): 1, (-13+13j): 0, (-12+13j): 1, (-12+12j): 1, (-12+11j): 1, (-11+11j): 0, (-11+12j): 0, (-13+12j): 0, (-16+13j): 0, (-13+11j): 0, (-12+10j): 1, (-11+10j): 0, (-13+10j): 0, (-11+13j): 0, (-20+20j): 1, (-20+21j): 0, (-21+20j): 0, (-21+19j): 0, (-19+20j): 1, (-19+21j): 0, (-18+20j): 1, (-17+20j): 0, (-18+21j): 0, (-18+19j): 1, (-17+19j): 0, (-18+18j): 1, (-17+18j): 1, (-16+18j): 1, (-16+19j): 1, (-15+19j): 0, (-15+18j): 0, (-16+20j): 1, (-16+21j): 0, (-15+20j): 1, (-15+21j): 0, (-14+20j): 1, (-14+19j): 1, (-14+18j): 1, (-13+19j): 0, (-13+20j): 0, (-14+21j): 0, (-13+18j): 1, (-12+18j): 1, (-11+18j): 1, (-11+19j): 0, (-12+19j): 0, (-10+18j): 1, (-9+18j): 1, (-10+19j): 0, (-4+1j): 0, (-5+2j): 0, -2j: 1, -3j: 1, (1-3j): 0, -4j: 1, (-1-4j): 0, (-3+4j): 0, (-7+3j): 0, (-12+9j): 1, (-11+9j): 0, (-13+9j): 0, (-12+8j): 1, (-13+8j): 0, (-12+7j): 0, (-11+8j): 1, (-11+7j): 0, (-10+8j): 1, (-10+9j): 1, (-10+10j): 1, (-9+10j): 1, (-9+11j): 0, (-8+10j): 1, (-9+9j): 0, (-8+9j): 0, (-7+10j): 1, (-6+10j): 1, (-6+9j): 1, (-6+8j): 1, (-7+8j): 1, (-8+8j): 1, (-9+8j): 0, (-7+9j): 0, (-10+11j): 1, (-10+7j): 1, (-9+7j): 0, (-10+6j): 1, (-10+5j): 1, (-11+5j): 0, (-10+4j): 1, (-10+3j): 1, (-9+3j): 0, (-11+3j): 0, (-11+4j): 0, (-10+2j): 1, (-10+1j): 1, (-10+0j): 1, (-9+0j): 0, (-11+1j): 0, (-11+0j): 1, (-11-1j): 0, (-12+0j): 1, (-12-1j): 0, (-10-1j): 0, (-9+1j): 0, (-11+2j): 0, (-9+2j): 0, (-12+1j): 1, (-13+1j): 0, (-12+2j): 1, (-13+2j): 1, (-14+2j): 1, (-14+3j): 0, (-14+1j): 0, (-13+3j): 0, (-15+2j): 1, (-12+3j): 0, (-15+3j): 0, (-16+2j): 1, (-16+1j): 0, (-17+2j): 0, (-16+3j): 1, (-17+3j): 0, (-15+1j): 0, (-13+0j): 0, (-10+12j): 1, (-11+6j): 0, (-16+4j): 1, (-17+4j): 0, (-15+4j): 0, (-16+5j): 1, (-15+5j): 0, (-16+6j): 1, (-17+6j): 0, (-17+5j): 0, (-15+6j): 0, (-16+7j): 1, (-16+8j): 1, (-16+9j): 0, (-17+8j): 1, (-17+9j): 0, (-18+8j): 1, (-15+7j): 0, (-17+7j): 0, (-15+8j): 0, (-18+7j): 0, (-19+8j): 0, (-18+9j): 1, (-18+10j): 1, (-17+10j): 1, (-16+10j): 1, (-15+10j): 1, (-15+9j): 0, (-15+11j): 0, (-14+10j): 1, (-14+11j): 1, (-14+9j): 1, (-14+8j): 1, (-14+7j): 1, (-13+7j): 0, (-19+9j): 0, (-19+10j): 1, (-16+11j): 0, (-14+6j): 1, (-17+11j): 0, (-14+12j): 1, (-14+5j): 0, (-15+12j): 1, (-20+10j): 1, (-21+10j): 0, (-20+9j): 1, (-21+9j): 0, (-20+8j): 1, (-21+8j): 0, (-20+7j): 1, (-19+7j): 0, (-21+7j): 0, (-20+6j): 1, (-20+5j): 0, (-21+6j): 0, (-19+6j): 1, (-19+5j): 0, (-18+6j): 1, (-18+5j): 1, (-16+12j): 1, (-13+6j): 1, (-13+5j): 0, (-12+6j): 1, (-12+5j): 1, (-12+4j): 1, (-13+4j): 1, (-14+4j): 1, (-18+4j): 1, (-18+3j): 1, (-18+2j): 1, (-19+4j): 0, (-19+3j): 0, (-8+18j): 1, (-8+17j): 0, (-9+19j): 0, (-9+17j): 0, (-7+18j): 1, (-8+19j): 0, (-7+17j): 0, (-6+18j): 1, (-5+18j): 0, (-6+17j): 1, (-5+17j): 0, (-6+16j): 1, (-6+15j): 1, (-5+16j): 1, (-5+15j): 0, (-4+16j): 1, (-4+17j): 1, (-3+17j): 0, (-7+16j): 1, (-8+16j): 1, (-7+15j): 0, (-4+18j): 1, (-4+19j): 1, (-3+19j): 0, (-5+19j): 0, (-4+20j): 1, (-3+20j): 1, (-2+20j): 1, (-2+19j): 0, (-2+21j): 0, (-1+20j): 1, (-1+21j): 0, 20j: 1, 21j: 0, (1+20j): 0, 19j: 1, (-1+19j): 0, (1+19j): 0, 18j: 1, (1+18j): 1, (1+17j): 0, (2+18j): 1, (2+17j): 0, (3+18j): 0, (2+19j): 1, (2+20j): 1, (3+20j): 1, (4+20j): 1, (5+20j): 1, (5+19j): 0, (5+21j): 0, (6+20j): 1, (6+21j): 0, (-1+18j): 1, (-2+18j): 1, (-3+18j): 0, (-3+21j): 0, (-5+20j): 1, (-6+20j): 1, (-6+21j): 0, (-5+21j): 0, (-4+21j): 0, (-7+20j): 1, (-7+21j): 0, (-8+20j): 1, (-8+21j): 0, (-6+19j): 0, (-9+20j): 1, (-10+20j): 1, (-11+20j): 1, (-12+20j): 1, (-11+21j): 0, (-9+21j): 0, (-12+21j): 0, (-7+19j): 0, (-10+21j): 0, (-6+14j): 1, (3+19j): 0, (-18+1j): 1, (-19+2j): 0, (-19+1j): 0, (-18+0j): 1, (-19+0j): 1, (-19-1j): 0, (-18-1j): 0, (-17+1j): 0, (-20+0j): 1, (-17+0j): 0, (-20+1j): 1, (-20+2j): 1, (-21+2j): 0, (-21+1j): 0, (-20+3j): 1, (-21+3j): 0, (-20+4j): 1, (-21+4j): 0, (-20-1j): 1, (-20-2j): 1, (-20-3j): 1, (-19-3j): 0, (-20-4j): 1, (-20-5j): 1, (-19-5j): 0, (-19-4j): 0, (-21-4j): 0, (-21-5j): 0, (-20-6j): 1, (-21-6j): 0, (-20-7j): 0, (-19-6j): 1, (-19-7j): 0, (-18-6j): 1, (-18-7j): 0, (-18-5j): 1, (-18-4j): 1, (-17-4j): 1, (-16-4j): 1, (-16-5j): 0, (-15-4j): 1, (-15-5j): 0, (-14-4j): 1, (-14-3j): 1, (-13-3j): 0, (-13-4j): 0, (-14-5j): 0, (-15-3j): 0, (-16-3j): 0, (-17-5j): 0, (-18-3j): 0, (-17-6j): 0, (-21-3j): 0, (-19-2j): 0, (-21-1j): 0, (-21-2j): 0, (-21+0j): 0, (-17-3j): 0, (-14-2j): 1, (-13-2j): 1, (-14-1j): 1, (-13-1j): 0, (-15-1j): 0, (-14+0j): 1, (-15+0j): 1, (-16+0j): 1, (-15-2j): 0, (-16-1j): 1, (-17-1j): 0, (-16-2j): 1, (-17-2j): 1, (-18-2j): 1, (-12-2j): 1, (-12-3j): 1, (-12-4j): 1, (-12-5j): 0, (-11-3j): 0, (-11-4j): 1, (-11-5j): 0, (-10-4j): 1, (-10-5j): 0, (-10-3j): 0, (-9-4j): 1, (-9-5j): 0, (-11-2j): 0, (-8-4j): 1, (-7-4j): 0, (-8-3j): 0, (-8-5j): 1, (-8-6j): 1, (-7-5j): 0, (-8-7j): 1, (-7-7j): 0, (-9-7j): 0, (-8-8j): 1, (-9-8j): 0, (-9-6j): 0, (-7-6j): 0, (-9-3j): 0, (-7-8j): 1, (-7-9j): 0, (-6-8j): 1, (-8-9j): 0, (-6-7j): 1, (-5-8j): 1, (-5-9j): 0, (-6-6j): 1, (-6-9j): 0, (-4-8j): 1, (-4-9j): 0, (-3-8j): 1, (-3-9j): 0, (-5-7j): 0, (-2-8j): 1, (-2-9j): 1, (-1-9j): 0, (-2-10j): 1, (-1-10j): 0, (-3-10j): 0, (-2-11j): 1, (-1-11j): 0, (-3-11j): 0, (-2-12j): 1, (-2-13j): 1, (-3-12j): 0, (-2-14j): 1, (-2-15j): 1, (-1-15j): 0, (-1-14j): 0, (-3-15j): 0, (-2-16j): 1, (-3-16j): 1, (-4-16j): 1, (-4-15j): 1, (-5-15j): 0, (-4-14j): 1, (-4-13j): 1, (-3-13j): 0, (-5-14j): 0, (-3-17j): 0, (-2-17j): 0, (-3-14j): 0, (-5-16j): 0, (-4-17j): 0, (-5-13j): 0, (-4-12j): 1, (-4-11j): 1, (-5-11j): 0, (-5-12j): 0, (-4-10j): 1, (-5-10j): 1, (-6-10j): 1, (-6-11j): 0, (-7-10j): 1, (-8-10j): 1, (-9-10j): 1, (-10-10j): 1, (-9-11j): 0, (-10-9j): 1, (-10-8j): 1, (-11-8j): 1, (-11-9j): 0, (-9-9j): 0, (-11-10j): 0, (-8-11j): 0, (-12-8j): 1, (-12-7j): 0, (-10-7j): 0, (-11-7j): 0, (-13-8j): 1, (-13-7j): 0, (-14-8j): 1, (-15-8j): 0, (-14-7j): 1, (-15-7j): 0, (-14-6j): 1, (-15-6j): 1, (-16-6j): 1, (-16-7j): 1, (-16-8j): 1, (-16-9j): 0, (-17-8j): 1, (-17-7j): 0, (-17-9j): 0, (-18-8j): 1, (-19-8j): 0, (-18-9j): 1, (-19-9j): 0, (-18-10j): 1, (-17-10j): 1, (-18-11j): 0, (-19-10j): 0, (-16-10j): 1, (-15-10j): 1, (-15-9j): 0, (-14-10j): 1, (-13-10j): 0, (-14-9j): 0, (-14-11j): 1, (-13-11j): 0, (-14-12j): 1, (-13-12j): 1, (-15-12j): 0, (-15-11j): 0, (-14-13j): 0, (-12-12j): 1, (-12-13j): 0, (-12-11j): 1, (-12-10j): 1, (-13-13j): 0, (-11-12j): 1, (-16-11j): 0, (-17-11j): 0, (-13-6j): 1, (-13-5j): 0, (-12-6j): 1, (-11-13j): 0, (-11-11j): 0, (-10-12j): 1, (-10-11j): 0, (-9-12j): 0, (-10-13j): 1, (-10-14j): 1, (-10-15j): 0, (-9-14j): 1, (-8-14j): 1, (-8-13j): 1, (-8-12j): 1, (-7-12j): 1, (-6-12j): 1, (-7-13j): 0, (-6-13j): 1, (-6-14j): 1, (-7-14j): 0, (-6-15j): 1, (-6-16j): 1, (-7-16j): 0, (-7-15j): 0, (-6-17j): 1, (-6-18j): 1, (-5-17j): 0, (-6-19j): 0, (-7-18j): 1, (-8-18j): 1, (-8-19j): 0, (-7-19j): 0, (-9-18j): 1, (-10-18j): 1, (-10-17j): 0, (-9-19j): 0, (-9-17j): 0, (-11-18j): 1, (-10-19j): 0, (-11-19j): 0, (-11-17j): 0, (-12-18j): 1, (-12-19j): 0, (-12-17j): 1, (-5-18j): 1, (-7-17j): 0, (-8-17j): 0, (-4-18j): 1, (-5-19j): 0, (-4-19j): 0, (-13-18j): 0, (-13-17j): 0, (-12-16j): 1, (-13-16j): 1, (-14-16j): 1, (-15-16j): 1, (-16-16j): 1, (-15-17j): 0, (-15-15j): 0, (-16-17j): 0, (-16-15j): 1, (-14-15j): 0, (-14-17j): 0, (-13-15j): 0, (-12-15j): 0, (-11-16j): 1, (-11-15j): 0, (-10-16j): 1, (-3-18j): 1, (-2-18j): 1, (-2-19j): 0, (-1-18j): 1, (-1-19j): 0, (-1-17j): 0, (-3-19j): 0, -18j: 1, -17j: 1, (1-18j): 0, -19j: 0, (1-17j): 0, -16j: 1, -15j: 1, (1-15j): 0, (1-16j): 0, -14j: 1, -13j: 1, -12j: 1, (1-12j): 1, (-1-12j): 0, (-1-13j): 0, -11j: 0, (1-13j): 0, (1-11j): 0, (2-12j): 1, (2-11j): 0, (3-12j): 0, (2-13j): 1, (3-13j): 0, (2-14j): 1, (2-15j): 0, (1-14j): 0, (-1-16j): 0, (-9-15j): 0, (-7-11j): 0, (-8-15j): 0, (-9-13j): 0, (-11-14j): 0, (-12-9j): 0, (-11-6j): 1, (-10-6j): 1, (-13-9j): 0, (-6-5j): 1, (-6-4j): 1, (-6-3j): 1, (-5-3j): 0, (-6-2j): 1, (-6-1j): 1, (-5-1j): 0, (-7-1j): 0, (-7-2j): 0, (-5-2j): 0, (-6+0j): 1, (-5+0j): 1, (-5+1j): 0, (-4+0j): 1, (-7+0j): 1, (-8+0j): 1, (-8+1j): 1, (-8-1j): 1, (-9-1j): 0, (-8+2j): 1, (-6+1j): 0, (-7-3j): 0, (3-14j): 1, (4-14j): 1, (5-14j): 1, (5-15j): 0, (6-14j): 1, (6-13j): 1, (7-13j): 0, (6-15j): 0, (5-13j): 0, (6-12j): 1, (5-12j): 1, (4-12j): 1, (5-11j): 0, (7-14j): 1, (8-14j): 1, (8-15j): 0, (9-14j): 1, (7-15j): 0, (4-13j): 0, (4-15j): 0, (4-11j): 1, (4-10j): 1, (3-10j): 1, (3-11j): 0, (2-10j): 1, (1-10j): 1, -10j: 1, (3-9j): 0, (3-15j): 0, (9-15j): 0, (10-14j): 1, (10-15j): 0, (11-14j): 1, (12-14j): 1, (13-14j): 0, (12-13j): 0, (11-13j): 0, (11-15j): 0, (12-15j): 1, (12-16j): 1, (13-16j): 0, (11-16j): 1, (10-16j): 1, (10-17j): 0, (9-16j): 1, (8-16j): 1, (7-16j): 0, (9-17j): 0, (8-17j): 1, (7-17j): 0, (8-18j): 1, (7-18j): 1, (8-19j): 0, (9-18j): 1, (11-17j): 0, (13-15j): 0, (12-17j): 0, (9-19j): 0, (10-18j): 1, (7-19j): 0, (10-19j): 0, (6-18j): 1, (5-18j): 0, (6-17j): 1, (6-16j): 1, (5-16j): 1, (5-17j): 0, (4-16j): 1, (3-16j): 1, (3-17j): 0, (11-18j): 1, (11-19j): 0, (12-18j): 1, (13-18j): 1, (13-17j): 0, (13-19j): 0, (12-19j): 0, (14-18j): 1, (15-18j): 0, (14-19j): 0, (14-17j): 1, (14-16j): 1, (14-15j): 1, (15-16j): 0, (15-15j): 0, (14-14j): 1, (15-14j): 1, (16-14j): 1, (17-14j): 0, (16-13j): 1, (16-12j): 1, (15-12j): 1, (14-12j): 1, (15-13j): 0, (16-15j): 0, (17-13j): 0, (14-13j): 0, (13-12j): 1, (17-12j): 1, (12-12j): 1, (13-13j): 0, (18-12j): 1, (18-13j): 1, (19-13j): 0, (19-12j): 0, (15-17j): 0, (6-19j): 0, (18-14j): 1, (18-15j): 1, (19-15j): 0, (18-16j): 1, (17-16j): 0, (18-17j): 1, (19-16j): 0, (18-18j): 1, (17-18j): 1, (17-17j): 0, (17-19j): 0, (18-19j): 0, (16-18j): 1, (16-17j): 1, (16-16j): 1, (16-19j): 0, (19-18j): 0, (17-15j): 0, (19-17j): 0, (19-14j): 0, (2-16j): 1, (4-17j): 0, (2-17j): 1, (2-18j): 1, (2-19j): 0, (3-18j): 1, (3-19j): 0, (4-18j): 1, (4-19j): 0, (-16-14j): 1, (-9-16j): 1, (-8-16j): 1, (-17-16j): 0, (-17-15j): 0, (-16-13j): 1, (-15-13j): 0, (-17-13j): 0, (-15-14j): 1, (-14-14j): 1, (-13-14j): 1, (-12-14j): 1, (-16-12j): 1, (-17-14j): 0, (-17-12j): 1, (-18-12j): 1, (-18-13j): 1, (-19-13j): 0, (-19-12j): 0, (-18-14j): 1, (-19-14j): 1, (-19-15j): 0, (-18-15j): 0, (-4-1j): 1, (-4-2j): 1, (-7+1j): 0, (-7+2j): 1, (-6+2j): 1, (-8-2j): 1, (-9-2j): 1, (-10-2j): 1, (-20-14j): 1, (-20-13j): 1, (-21-13j): 0, (-20-12j): 1, (-20-11j): 1, (-19-11j): 0, (-21-12j): 0, (-20-10j): 1, (-21-10j): 0, (-20-9j): 1, (-21-9j): 0, (-20-8j): 1, (-21-8j): 0, (-21-14j): 0, (-20-15j): 1, (-20-16j): 1, (-19-16j): 1, (-18-16j): 1, (-19-17j): 0, (-20-17j): 0, (-18-17j): 1, (-21-15j): 0, (-21-11j): 0, (-21-16j): 0, (-18-18j): 1, (-19-18j): 1, (-17-18j): 1, (-17-17j): 0, (-16-18j): 1, (-15-18j): 1, (-16-19j): 0, (-17-19j): 0, (-18-19j): 0, (-19-19j): 0, (-14-18j): 1, (-14-19j): 0, (-15-19j): 0, (-20-18j): 1, (-20-19j): 0, (-21-18j): 0, (2+21j): 0, (3+21j): 0, (4+21j): 0, (4+19j): 0, (7+20j): 0, (6+19j): 1, (6+18j): 1, (5+18j): 0, (7+18j): 1, (7+19j): 0, (7+17j): 0, (8+18j): 1, (8+19j): 0, (9+18j): 1, (9+19j): 0, (10+18j): 1, (10+19j): 0, (10+17j): 0, (11+18j): 1, (9+17j): 0, (11+17j): 0, (12+18j): 1, (11+19j): 0, (13+18j): 0, (12+19j): 1, (13+19j): 0, (12+20j): 1, (12+21j): 0, (11+20j): 1, (10+20j): 1, (12+17j): 0, (6+17j): 0, (8+17j): 0, (11+21j): 0, (9+20j): 1, (10+21j): 0, (9+21j): 0, (8+20j): 1, (8+21j): 0, (13+20j): 1, (13+21j): 0, (14+20j): 1, (14+19j): 1, (15+19j): 0, (14+18j): 1, (14+17j): 0, (15+18j): 1, (15+17j): 0, (16+18j): 1, (17+18j): 1, (18+18j): 1, (19+18j): 0, (18+19j): 1, (19+19j): 0, (18+17j): 1, (17+17j): 0, (18+16j): 1, (17+16j): 1, (16+16j): 1, (16+15j): 1, (16+14j): 1, (17+14j): 0, (15+15j): 0, (15+14j): 1, (15+13j): 0, (14+14j): 1, (13+14j): 0, (14+13j): 0, (14+15j): 1, (13+15j): 0, (14+16j): 1, (15+16j): 0, (16+13j): 0, (17+15j): 0, (19+16j): 0, (18+15j): 0, (17+19j): 0, (18+20j): 1, (18+21j): 0, (19+20j): 0, (19+17j): 0, (16+17j): 0, (16+19j): 0, (14+21j): 0, (15+20j): 0, (17+20j): 1, (16+20j): 1, (16+21j): 0, (17+21j): 0, (13+16j): 1, (13+17j): 0, (12+16j): 1, (12+15j): 0, (11+16j): 1, (10+16j): 1, (11+15j): 0, (10+15j): 0, (9+16j): 1, (8+16j): 1, (7+16j): 0, (8+15j): 1, (8+14j): 1, (7+15j): 0, (7+14j): 1, (7+13j): 0, (6+14j): 1, (6+15j): 0, (5+14j): 1, (8+13j): 0, (5+15j): 0, (4+14j): 1, (3+14j): 0, (4+13j): 0, (5+13j): 0, (4+15j): 1, (4+16j): 1, (3+16j): 1, (2+16j): 1, (3+15j): 0, (3+17j): 0, (2+15j): 1, (4+17j): 1, (5+17j): 0, (4+18j): 1, (5+16j): 1, (6+16j): 1, (6+13j): 0, (9+14j): 0, (9+15j): 0, (2+14j): 1, (2+13j): 1, (3+13j): 0, (2+12j): 1, (2+11j): 0, (3+12j): 1, (3+11j): 0, (4+12j): 1, (4+11j): 0, (5+12j): 1, (5+11j): 0, (6+12j): 1, (7+12j): 1, (8+12j): 1, (7+11j): 0, (6+11j): 0, (9+12j): 1, (9+11j): 0, (10+12j): 1, (11+12j): 0, (10+13j): 1, (11+13j): 0, (10+14j): 1, (11+14j): 1, (12+14j): 1, (12+13j): 1, (12+12j): 1, (12+11j): 1, (12+10j): 1, (13+11j): 0, (11+10j): 0, (11+11j): 0, (12+9j): 1, (12+8j): 1, (11+8j): 0, (13+8j): 1, (13+9j): 0, (12+7j): 0, (13+10j): 0, (14+8j): 1, (13+7j): 0, (15+8j): 0, (14+7j): 0, (14+9j): 1, (14+10j): 1, (11+9j): 0, (13+13j): 0, (13+12j): 0, (9+13j): 0, (10+11j): 0, (15+10j): 1, (14+11j): 0, (15+11j): 0, (15+9j): 0, (16+10j): 1, (16+9j): 1, (17+9j): 0, (16+11j): 0, (17+10j): 0, (8+11j): 0, (16+8j): 1, (16+7j): 1, (17+8j): 0, (17+7j): 0, (15+7j): 0, (16+6j): 1, (17+6j): 0, (15+6j): 0, (16+5j): 1, (15+5j): 0, (17+5j): 0, (16+4j): 1, (15+4j): 1, (14+4j): 1, (14+3j): 0, (13+4j): 1, (13+5j): 0, (13+3j): 0, (12+4j): 1, (12+3j): 1, (11+4j): 0, (14+5j): 0, (16+3j): 0, (17+4j): 0, (15+3j): 0, (11+3j): 0, (12+2j): 1, (13+2j): 0, (11+2j): 0, (12+1j): 1, (11+1j): 0, (12+0j): 1, (13+0j): 0, (12-1j): 0, (11+0j): 1, (10+0j): 1, (10+1j): 1, (9+1j): 0, (10+2j): 1, (10+3j): 0, (10-1j): 1, (10-2j): 1, (11-2j): 1, (12-2j): 1, (13-2j): 0, (11-3j): 0, (12-3j): 1, (13-3j): 0, (12-4j): 1, (12-5j): 0, (13-4j): 1, (14-4j): 1, (14-3j): 1, (14-5j): 1, (14-6j): 1, (13-6j): 1, (12-6j): 1, (13-5j): 0, (15-5j): 0, (11-1j): 0, (15-3j): 0, (9+2j): 1, (9+3j): 0, (14-2j): 1, (15-2j): 1, (15-1j): 0, (14-1j): 0, (16-2j): 1, (16-3j): 0, (16-1j): 1, (16+0j): 1, (17+0j): 0, (17-2j): 0, (17-1j): 0, (15+0j): 1, (15-4j): 0, (15+1j): 0, (8+2j): 1, (7+2j): 0, (8+3j): 1, (7+3j): 0, (8+4j): 1, (7+4j): 0, (9+4j): 0, (8+5j): 1, (12+5j): 0, (13+1j): 0, (14+0j): 1, (16+1j): 0, (14+1j): 1, (14+2j): 1, (15+2j): 1, (16+2j): 1, (17+2j): 1, (17+1j): 0, (17+3j): 0, (18+2j): 1, (19+2j): 0, (18+3j): 1, (18+4j): 1, (19+4j): 0, (7+5j): 0, (9+5j): 0, (8+6j): 1, (18+1j): 1, (18+0j): 1, (19+1j): 0, (19+0j): 0, (18-1j): 1, (18-2j): 1, (19-2j): 0, (18-3j): 1, (17-3j): 0, (18-4j): 1, (19-3j): 0, (19-4j): 0, (17-4j): 1, (16-4j): 1, (19-1j): 0, (19+3j): 0, (18+5j): 1, (19+5j): 0, (18+6j): 1, (19+6j): 0, (18+7j): 1, (19+7j): 0, (18+8j): 1, (19+8j): 0, (18+9j): 1, (18+10j): 1, (18+11j): 1, (19+11j): 0, (19+9j): 0, (17+11j): 0, (18+12j): 1, (17+12j): 1, (18+13j): 1, (18+14j): 1, (19+14j): 0, (17+13j): 0, (19+10j): 0, (7+6j): 0, (9+6j): 0, (8+7j): 1, (9+7j): 0, (7+7j): 0, (8+8j): 1, (9+8j): 0, (8+9j): 1, (9+9j): 0, (8+10j): 1, (7+9j): 0, (7+8j): 0, (7+10j): 1, (9+10j): 1, (6+10j): 1, (6+9j): 0, (5+10j): 1, (5+9j): 0, (4+10j): 1, (4+9j): 0, (3+10j): 1, (2+10j): 1, (2+9j): 1, (1+9j): 0, (2+8j): 1, (1+8j): 0, (3+8j): 1, (2+7j): 0, (3+7j): 0, (3+9j): 0, (4+8j): 1, (4+7j): 0, (5+8j): 1, (5+7j): 0, (6+8j): 1, (6+7j): 1, (10+10j): 1, (10+9j): 1, (10+8j): 1, (10+7j): 1, (11+7j): 0, (10+6j): 1, (11+6j): 1, (12+6j): 1, (13+6j): 1, (11+5j): 0, (14+6j): 1, (10+5j): 1, (10+4j): 1, (16+12j): 1, (15+12j): 1, (14+12j): 2}

visited = {}
q = PriorityQueue()

oxygen_location = None
for key, item in map.items():
    if item == 2:
        oxygen_location = key

location = oxygen_location
item = Path(location, 0)
q.put((1, item))

while not q.empty():
    (priority, item) = q.get()
    visited[item.location] = item.distance
    neighbors = get_neighboring_paths(map, item.location)
    for path in neighbors:
        if path not in visited:
            priority = calculate_manhattan_distance(path, start_location)
            new_item = Path(path, item.distance + 1)
            q.put((priority, new_item))

# Part 1
print(visited[start_location])

# Part 2
print(max(visited.values()))
